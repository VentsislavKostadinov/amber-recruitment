{"version":3,"sources":["AmberRecruitment/Home/Header/Header.js","AmberRecruitment/Home/Home.js","AmberRecruitment/Firebase/context.js","AmberRecruitment/JobList/JobList.js","AmberRecruitment/notifications.js","AmberRecruitment/CreateJob/CreateJob.js","AmberRecruitment/FindJob/FindJob.js","AmberRecruitment/NotFoundPage/NotFoundPage.js","AmberRecruitment/Routes.js","AmberRecruitment/SignOut/SignOut.js","AmberRecruitment/Navigation/SignInLinks.js","AmberRecruitment/Login/LoginModal.js","AmberRecruitment/Register/RegisterModal.js","AmberRecruitment/Navigation/SignOutLinks.js","AmberRecruitment/Navigation/Navigation.js","App.js","index.js"],"names":["Header","Home","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","JobList","props","onCollectionUpdate","querySnapshot","boards","forEach","doc","data","jobTitle","jobDescription","push","key","id","setState","ref","firestore","collection","unsubscribe","state","this","onSnapshot","map","board","style","margin","color","href","Component","showNotification","text","userEmail","document","getElementById","innerHTML","closeAlertLogin","querySelector","setTimeout","display","addEventListener","CreateJob","handleJobTitle","e","target","value","handleJobDescription","handleSubmitJob","preventDefault","add","then","res","console","log","catch","err","message","lg","className","onChange","label","group","type","validate","error","success","rows","onClick","FindJob","NotFoundPage","Routes","exact","path","component","SignOut","logout","auth","signOut","SignInLinks","authListener","userDetails","onAuthStateChanged","user","userInformation","email","to","right","lineHeight","LoginModal","toggle","modal","handleUserEmail","handleUserPassword","userPassword","handleSubmit","errorLogin","textAlign","textContent","wrongPassword","signInWithEmailAndPassword","response","enterPressed","isOpen","icon","onKeyPress","RegisterModal","registerUserEmail","registerPassword","confirmPassword","handleRegisterUserEmail","handleRegisterUserPassword","handleConfirmRegisterPassword","handleSubmitRegister","errorRegister","wrongPasswords","createUserWithEmailAndPassword","passwordLength","required","SignOutLinks","Navigation","toggleCollapse","dark","expand","navbar","App","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.49db0fa0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h1>Header section</h1>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header/Header\";\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <Header/>\r\n    )\r\n}\r\n\r\nexport default Home;","import firebase from \"firebase\";\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBQC4y3n_ooduNrzEZepf5-mAG61GMhT6o\",\r\n    authDomain: \"amber-recruitment.firebaseapp.com\",\r\n    databaseURL: \"https://amber-recruitment.firebaseio.com\",\r\n    projectId: \"amber-recruitment\",\r\n    storageBucket: \"amber-recruitment.appspot.com\",\r\n    messagingSenderId: \"1095496441215\",\r\n    appId: \"1:1095496441215:web:87b231efee596734474e4a\"\r\n};\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(config);\r\n//const auth = fire.auth();\r\n\r\n//const firebase = firebase.auth();\r\n//const db = firebase.firestore();\r\n\r\nexport default fire;\r\n\r\n//module.exports = {fire, auth}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, } from 'mdbreact';\r\nimport fire from \"../Firebase/context\";\r\n\r\nclass JobList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = fire.firestore().collection('jobs');\r\n        this.unsubscribe = null;\r\n        this.state = {\r\n            boards: []\r\n        };\r\n    }\r\n\r\n    onCollectionUpdate = (querySnapshot) => {\r\n        const boards = [];\r\n        querySnapshot.forEach((doc) => {\r\n            const { jobTitle, jobDescription } = doc.data();\r\n            boards.push({\r\n                key: doc.id,\r\n                doc,\r\n                jobTitle,\r\n                jobDescription\r\n            });\r\n        });\r\n        this.setState({\r\n            boards\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MDBCol>\r\n                {this.state.boards.map(board =>\r\n                    <MDBCard key={board.key} style={{ margin: '20px' }}>\r\n                        <MDBCardBody>\r\n                            <MDBCardTitle >{board.jobTitle}</MDBCardTitle>\r\n                            <MDBCardText>\r\n                                {board.jobDescription}\r\n                            </MDBCardText>\r\n                            <MDBBtn color=\"elegant\" href=\"#\">Find out more</MDBBtn>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                )}\r\n            </MDBCol>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default JobList;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","function showNotification(text, userEmail) {\r\n\r\n    let successLogin = document.getElementById('success-login');\r\n\r\n    successLogin.innerHTML = `<div class=\"alert alert-success alert-dismissible\" style=\"position: absolute; top: 100px; right: 20px;\">\r\n                  <a href=\"#\" class=\"close\" data-dismiss=\"alert\"  aria-label=\"close\">&times;</a>\r\n                 ${text} ${userEmail}</div>`;\r\n\r\n    let closeAlertLogin = document.querySelector('.alert');\r\n\r\n    // close alert in 3 seconds\r\n    setTimeout(() => {\r\n        closeAlertLogin.style.display = 'none';\r\n    }, 2000)\r\n\r\n    // close alert manually pressing x\r\n    closeAlertLogin.addEventListener('click', () => {\r\n        closeAlertLogin.style.display = 'none';\r\n    })\r\n}\r\n\r\nexport default showNotification;\r\n","import React, {Component} from \"react\";\r\nimport {MDBCol, MDBInput, MDBBtn} from 'mdbreact';\r\nimport './style/CreateJob.css';\r\nimport fire from \"../Firebase/context\";\r\nimport JobList from \"../JobList/JobList\";\r\nimport showNotification from \"../notifications\";\r\n\r\nexport default class CreateJob extends Component {\r\n\r\n        state = {\r\n            jobTitle: '',\r\n            jobDescription: ''\r\n        }\r\n\r\n\r\n    handleJobTitle = (e) => {\r\n\r\n        this.setState({\r\n            jobTitle: e.target.value\r\n        })\r\n    }\r\n\r\n    handleJobDescription = (e) => {\r\n\r\n        this.setState({\r\n            jobDescription: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmitJob = (e) => {\r\n        e.preventDefault();\r\n\r\n        let {jobTitle, jobDescription} = this.state;\r\n\r\n        if (jobTitle !== '' && jobDescription !== '') {\r\n\r\n            fire.firestore().collection('jobs').add({\r\n                jobTitle,\r\n                jobDescription\r\n\r\n            }).then(res => {\r\n                console.log(res);\r\n                showNotification('Data added', '');\r\n\r\n            }).catch(err => {\r\n\r\n                console.log(err.message);\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <MDBCol lg=\"6\" id='create-job'>\r\n                <form>\r\n                    <p className=\"h5 text-center mb-4\">Post a new job</p>\r\n                    <div className=\"grey-text\">\r\n                        <MDBInput onChange={this.handleJobTitle} label=\"Type a new job title\" group type=\"text\"\r\n                                  id='job-title' validate error=\"wrong\"\r\n                                  success=\"right\"/>\r\n                        <MDBInput onChange={this.handleJobDescription} label=\"Job details\" group id='job-description'\r\n                                  type=\"textarea\" rows=\"5\"/>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <MDBBtn onClick={this.handleSubmitJob}>Post</MDBBtn>\r\n                    </div>\r\n                </form>\r\n            </MDBCol>\r\n        );\r\n    };\r\n}\r\n","import React from \"react\";\r\n\r\nconst FindJob = () => {\r\n\r\n    return (\r\n        <h1>Add a new job page</h1>\r\n    )\r\n}\r\n\r\nexport default FindJob;","import React from \"react\";\r\n\r\nconst NotFoundPage = () => {\r\n\r\n    return (\r\n    <h1 className= 'text-center'>Oooops! Page is not Found 404</h1>\r\n    )\r\n}\r\n\r\nexport default NotFoundPage;","import React, {Component} from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport Home from \"./Home/Home\";\r\nimport CreateJob from \"./CreateJob/CreateJob\";\r\nimport JobList from \"./JobList/JobList\";\r\nimport FindJob from \"./FindJob/FindJob\";\r\nimport NotFoundPage from \"./NotFoundPage/NotFoundPage\";\r\n\r\n\r\n\r\nexport default class Routes extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path='/' component={Home}/>\r\n                    <Route path='/find-a-job/' component={FindJob}/>\r\n                    <Route path='/jobs/' component={JobList}/>\r\n                    <Route path='/create-a-job/' component={CreateJob}/>\r\n                    <Route component={NotFoundPage}/>\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component} from \"react\";\r\nimport fire from \"../Firebase/context\";\r\nimport {MDBContainer, MDBRow, MDBBtn} from 'mdbreact';\r\nimport showNotification from \"../notifications\";\r\n\r\nexport default class SignOut extends Component {\r\n\r\n    logout = ()=> {\r\n\r\n        fire.auth().signOut()\r\n            .then(res => {\r\n                console.log(res);\r\n                showNotification('Successful logout', '')\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <MDBContainer id= 'modal-singOut'>\r\n                <MDBRow>\r\n                    <MDBBtn onClick={this.logout}>Sign out</MDBBtn>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        )\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\nimport {MDBNavbarNav, MDBNavItem, MDBNavLink} from \"mdbreact\";\r\nimport SignOut from \"../SignOut/SignOut\";\r\nimport fire from \"../Firebase/context\";\r\n\r\nexport default class SignInLinks extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.authListener()\r\n    }\r\n\r\n    authListener = () => {\r\n        let userDetails = document.querySelector('.user-info');\r\n\r\n\r\n        fire.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n\r\n                this.setState({user});\r\n                let userInformation = `Welcome, ${user.email}`;\r\n                userDetails.innerHTML = userInformation;\r\n\r\n            } else {\r\n                this.setState({user: null});\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MDBNavbarNav className='ml-auto'>\r\n                    <MDBNavItem>\r\n                        <MDBNavLink to=\"/find-a-job\">Find a job</MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                        <MDBNavLink to=\"/jobs\">Job list</MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                        <MDBNavLink to=\"/create-a-job\">Create a job</MDBNavLink>\r\n                    </MDBNavItem>\r\n                </MDBNavbarNav>\r\n                <MDBNavbarNav right>\r\n                    <MDBNavItem className='user-info' style={{color: 'white', lineHeight: '3.5'}}/>\r\n                    <MDBNavItem>\r\n                        <SignOut/>\r\n                    </MDBNavItem>\r\n                </MDBNavbarNav>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBModal, MDBModalHeader} from 'mdbreact';\r\nimport fire from \"../Firebase/context\";\r\n\r\n\r\nimport './style/LoginModal.css';\r\n\r\nimport showNotification from \"../notifications\";\r\n\r\n    export default class LoginModal extends Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                modal: false,\r\n                userEmail: '',\r\n                userPassword: '',\r\n\r\n            }\r\n        }\r\n\r\n        // Toggle modal button\r\n        toggle = () => {\r\n            this.setState({\r\n                modal: !this.state.modal\r\n            });\r\n        }\r\n\r\n        handleUserEmail = (e) => {\r\n\r\n            this.setState({\r\n                userEmail: e.target.value\r\n            })\r\n        }\r\n\r\n        handleUserPassword = (e) => {\r\n            this.setState({\r\n                userPassword: e.target.value\r\n            })\r\n        }\r\n\r\n\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            // Checks for empty values\r\n            const {userEmail, userPassword} = this.state;\r\n\r\n            if (userEmail === '' || userPassword === '') {\r\n                let errorLogin = document.getElementById('error-login');\r\n                errorLogin.style.color = 'red';\r\n                errorLogin.style.textAlign = 'center';\r\n                errorLogin.textContent = 'All values are required';\r\n                return;\r\n            }\r\n\r\n            let wrongPassword = document.getElementById('wrong-login-password');\r\n\r\n           fire.auth().signInWithEmailAndPassword(userEmail, userPassword)\r\n                .then((response) => {\r\n                    console.log(response);\r\n\r\n                    showNotification('Successful login, ', userEmail)\r\n\r\n                })\r\n                .catch(error => {\r\n                    wrongPassword.style.color = 'red';\r\n                    wrongPassword.textContent = error.message;\r\n                })\r\n        }\r\n\r\n        enterPressed = (e) => {\r\n            if (e.key === 'Enter') {\r\n                this.handleSubmit(e);\r\n            }\r\n        }\r\n\r\n        render() {\r\n\r\n            return (\r\n                <MDBContainer id='modal-login'>\r\n                    <MDBRow>\r\n                        <MDBBtn onClick={this.toggle}>Sign in</MDBBtn>\r\n                        <MDBModal isOpen={this.state.modal} toggle={this.toggle}><br/>\r\n                            <MDBModalHeader toggle={this.toggle}>Sign in</MDBModalHeader>\r\n                            <MDBCol>\r\n                                <form>\r\n                                    <div className='text-left'>\r\n                                        <MDBInput onChange={this.handleUserEmail} label=\"Type your email\"\r\n                                                  id='signInUser'\r\n                                                  icon=\"envelope\" group type=\"email\"\r\n                                                  validate error=\"wrong\"\r\n                                                  success=\"right\"/>\r\n                                        <MDBInput onChange={this.handleUserPassword} label=\"Type your password\"\r\n                                                  id='signInPassword' icon=\"lock\" group\r\n                                                  type=\"password\" onKeyPress={this.enterPressed} validate/>\r\n                                        <p id='error-login'/>\r\n                                        <p id='wrong-login-password'/>\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                        <MDBBtn onClick={this.handleSubmit}>Login</MDBBtn>\r\n                                    </div>\r\n                                </form>\r\n                            </MDBCol>\r\n                        </MDBModal>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            );\r\n        }\r\n    }\r\n\r\n","import React, {Component} from \"react\";\r\nimport {MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBModal, MDBModalHeader} from 'mdbreact';\r\nimport fire from \"../Firebase/context\";\r\nimport './style/RegisterModal.css';\r\n\r\nimport showNotification from \"../notifications\";\r\n\r\nexport default class RegisterModal extends Component {\r\n    state = {\r\n        modal: false,\r\n        registerUserEmail: '',\r\n        registerPassword: '',\r\n        confirmPassword: ''\r\n    }\r\n    // Toggle modal button\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    handleRegisterUserEmail = (e) => {\r\n\r\n        this.setState({\r\n            registerUserEmail: e.target.value\r\n        })\r\n    }\r\n\r\n    handleRegisterUserPassword = (e) => {\r\n        this.setState({\r\n            registerPassword: e.target.value\r\n        })\r\n    }\r\n\r\n    handleConfirmRegisterPassword = (e) => {\r\n        this.setState({\r\n            confirmPassword: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmitRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Checks for empty values\r\n        let {registerUserEmail, registerPassword, confirmPassword} = this.state;\r\n\r\n        if (registerUserEmail === '' || registerPassword === '' || confirmPassword === '') {\r\n            let errorRegister = document.getElementById('error-register');\r\n            errorRegister.style.color = 'red';\r\n            errorRegister.style.textAlign = 'center';\r\n            errorRegister.textContent = 'All values are required';\r\n            return;\r\n        }\r\n\r\n        // If passwords don't match\r\n        if (registerPassword !== confirmPassword) {\r\n            let wrongPasswords = document.getElementById('wrong-passwords');\r\n            wrongPasswords.style.color = 'red';\r\n            wrongPasswords.style.textAlign = 'center';\r\n            wrongPasswords.textContent = 'Passwords not match';\r\n            return;\r\n        }\r\n\r\n\r\n        fire.auth().createUserWithEmailAndPassword(registerUserEmail, registerPassword)\r\n            .then(response => {\r\n                console.log(response);\r\n\r\n                showNotification('Successful sign up, ', registerUserEmail);\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                let passwordLength = document.getElementById('passwords-length');\r\n                passwordLength.style.color = 'red';\r\n                passwordLength.style.textAlign = 'center';\r\n                passwordLength.textContent = error;\r\n            });\r\n    }\r\n\r\n    enterPressed = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.handleSubmitRegister(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MDBContainer id='modal-register'>\r\n                <MDBRow>\r\n                    <MDBBtn onClick={this.toggle}>Register</MDBBtn>\r\n                    <MDBModal isOpen={this.state.modal} toggle={this.toggle}><br/>\r\n                        <MDBModalHeader toggle={this.toggle}>Register</MDBModalHeader>\r\n                        <MDBCol>\r\n                            <form>\r\n                                <div className='text-left'>\r\n                                    <MDBInput onChange={this.handleRegisterUserEmail} label=\"Type your email\"\r\n                                              id='registerUser' icon=\"envelope\" group type=\"email\"\r\n                                              validate error=\"wrong\"\r\n                                              success=\"right\" required/>\r\n                                    <MDBInput onChange={this.handleRegisterUserPassword} label=\"Type your password\"\r\n                                              id='registerPassword' icon=\"lock\" group\r\n                                              type=\"password\" validate required/>\r\n                                    <MDBInput onChange={this.handleConfirmRegisterPassword} label=\"Confirm password\"\r\n                                              id='confirmPassword' icon=\"lock\" group\r\n                                              type=\"password\" onKeyPress={this.enterPressed} validate required/>\r\n                                    <p id='error-register'/>\r\n                                    <p id='wrong-passwords'/>\r\n                                    <p id='passwords-length'/>\r\n                                    <p>Password should be at least 6 characters</p>\r\n                                </div>\r\n                                <div className=\"text-center\">\r\n\r\n                                    <MDBBtn onClick={this.handleSubmitRegister}>Register</MDBBtn>\r\n                                </div>\r\n                            </form>\r\n                        </MDBCol>\r\n                    </MDBModal>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        );\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport {MDBNavbarNav, MDBNavItem, MDBNavLink} from \"mdbreact\";\r\nimport LoginModal from \"../Login/LoginModal\";\r\nimport RegisterModal from \"../Register/RegisterModal\";\r\n\r\nconst SignOutLinks = () => {\r\n\r\n    return (\r\n        <>\r\n            <MDBNavbarNav  className = 'ml-auto'>\r\n                <MDBNavItem>\r\n                    <MDBNavLink to=\"/\">Home</MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                    <MDBNavLink to=\"/jobs\">Job list</MDBNavLink>\r\n                </MDBNavItem>\r\n            </MDBNavbarNav>\r\n            <MDBNavbarNav right>\r\n                <LoginModal/>\r\n                <RegisterModal/>\r\n            </MDBNavbarNav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignOutLinks;","import React, {Component} from \"react\";\r\nimport {MDBNavbar, MDBNavbarBrand, MDBNavLink, MDBNavbarToggler, MDBCollapse} from \"mdbreact\";\r\nimport SignInLinks from \"./SignInLinks\";\r\nimport SignOutLinks from \"./SignOutLinks\";\r\nimport fire from \"../Firebase/context\";\r\nimport './style/navigation.css'\r\n\r\nexport default class Navigation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            modal: false,\r\n            user: {}\r\n        };\r\n\r\n    }\r\n\r\n\r\n    toggleCollapse = () => {\r\n        this.setState({isOpen: !this.state.isOpen});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.authListener()\r\n    }\r\n\r\n    authListener = () => {\r\n        let userDetails = document.querySelector('.user-info');\r\n\r\n\r\n        fire.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n\r\n                this.setState({user});\r\n                let userInformation = `Welcome, ${user.email}`;\r\n                userDetails.innerHTML = userInformation;\r\n\r\n\r\n            } else {\r\n                this.setState({user: null});\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <MDBNavbar color=\"indigo\" dark expand=\"md\" className='bg-transparent'>\r\n\r\n                <MDBNavbarBrand><MDBNavLink to=\"/\">\r\n                    <strong className=\"white-text text-center\">Amber<br/> Recruitment</strong>\r\n                </MDBNavLink>\r\n                </MDBNavbarBrand>\r\n                <MDBNavbarToggler onClick={this.toggleCollapse}/>\r\n                <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n                    {this.state.user ? (<SignInLinks/>) : (<SignOutLinks/>)}\r\n                </MDBCollapse>\r\n            </MDBNavbar>\r\n\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Routes from \"./AmberRecruitment/Routes\";\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport Navigation from './AmberRecruitment/Navigation/Navigation'\r\n\r\n\r\nconst App = () => {\r\n        return (\r\n            <div className=\"App\">\r\n                <Navigation />\r\n                <Routes/>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nReactDOM.render(\r\n  <BrowserRouter basename = '/amber-recruitment'><App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}