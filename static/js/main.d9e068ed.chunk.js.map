{"version":3,"sources":["AmberRecruitment/Home/Header/Header.js","AmberRecruitment/Home/Home.js","AmberRecruitment/Firebase/context.js","AmberRecruitment/notifications.js","AmberRecruitment/CreateJob/CreateJob.js","AmberRecruitment/JobList/JobList.js","AmberRecruitment/NotFoundPage/NotFoundPage.js","AmberRecruitment/Routes.js","AmberRecruitment/SignOut/SignOut.js","AmberRecruitment/Navigation/SignInLinks.js","AmberRecruitment/Login/LoginModal.js","AmberRecruitment/Register/RegisterModal.js","AmberRecruitment/Navigation/SignOutLinks.js","AmberRecruitment/Navigation/Navigation.js","App.js","index.js"],"names":["Header","Home","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","showNotification","text","userEmail","document","getElementById","innerHTML","closeAlertLogin","querySelector","setTimeout","style","display","addEventListener","CreateJob","state","jobTitle","jobSalary","jobLocation","jobDescription","handleJobTitle","e","setState","target","value","handleJobSalary","handleJobLocation","handleJobDescription","handleSubmitJob","preventDefault","requiredFields","firestore","collection","add","then","res","console","log","catch","err","message","color","textContent","enterPressed","key","lg","id","className","onChange","this","label","group","type","validate","error","success","rows","onKeyPress","onClick","Component","JobList","props","onCollectionUpdate","querySnapshot","currentJobList","forEach","doc","data","push","authListener","auth","onAuthStateChanged","user","onDelete","delete","ref","unsubscribe","onSnapshot","map","job","margin","href","data-dismiss","aria-label","NotFoundPage","Routes","exact","path","component","SignOut","logout","signOut","SignInLinks","Navigation","to","right","lineHeight","LoginModal","toggle","modal","handleUserEmail","handleUserPassword","userPassword","handleSubmit","errorLogin","textAlign","wrongPassword","signInWithEmailAndPassword","response","isOpen","icon","RegisterModal","registerUserEmail","registerPassword","confirmPassword","handleRegisterUserEmail","handleRegisterUserPassword","handleConfirmRegisterPassword","handleSubmitRegister","errorRegister","wrongPasswords","createUserWithEmailAndPassword","passwordLength","required","SignOutLinks","toggleCollapse","userDetails","userInformation","email","dark","expand","navbar","App","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.d9e068ed.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h1>Header section</h1>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header/Header\";\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <Header/>\r\n    )\r\n}\r\n\r\nexport default Home;","import firebase from \"firebase\";\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBQC4y3n_ooduNrzEZepf5-mAG61GMhT6o\",\r\n    authDomain: \"amber-recruitment.firebaseapp.com\",\r\n    databaseURL: \"https://amber-recruitment.firebaseio.com\",\r\n    projectId: \"amber-recruitment\",\r\n    storageBucket: \"amber-recruitment.appspot.com\",\r\n    messagingSenderId: \"1095496441215\",\r\n    appId: \"1:1095496441215:web:87b231efee596734474e4a\"\r\n};\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(config);\r\n//const auth = fire.auth();\r\n\r\n//const firebase = firebase.auth();\r\n//const db = firebase.firestore();\r\n\r\nexport default fire;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","function showNotification(text, userEmail) {\r\n\r\n    let successLogin = document.getElementById('success-login');\r\n\r\n    successLogin.innerHTML = `<div class=\"alert alert-success alert-dismissible\" style=\"position: absolute; top: 100px; right: 20px;\">\r\n                  <a href=\"#\" class=\"close\" data-dismiss=\"alert\"  aria-label=\"close\">&times;</a>\r\n                 ${text} ${userEmail}</div>`;\r\n\r\n    let closeAlertLogin = document.querySelector('.alert');\r\n\r\n    // close alert in 3 seconds\r\n    setTimeout(() => {\r\n        closeAlertLogin.style.display = 'none';\r\n    }, 2000)\r\n\r\n    // close alert manually pressing x\r\n    closeAlertLogin.addEventListener('click', () => {\r\n        closeAlertLogin.style.display = 'none';\r\n    })\r\n}\r\n\r\nexport default showNotification;\r\n","import React, { Component } from \"react\";\r\nimport { MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport './style/CreateJob.css';\r\nimport fire from \"../Firebase/context\";\r\nimport showNotification from \"../notifications\";\r\n\r\nexport default class CreateJob extends Component {\r\n\r\n    state = {\r\n        jobTitle: '',\r\n        jobSalary: '',\r\n        jobLocation: '',\r\n        jobDescription: ''\r\n    }\r\n\r\n    handleJobTitle = (e) => {\r\n\r\n        this.setState({\r\n            jobTitle: e.target.value\r\n        })\r\n    }\r\n\r\n    handleJobSalary = (e) => {\r\n\r\n        this.setState({\r\n            jobSalary: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleJobLocation = (e) => {\r\n\r\n        this.setState({\r\n            jobLocation: e.target.value\r\n        })\r\n    }\r\n\r\n    handleJobDescription = (e) => {\r\n\r\n        this.setState({\r\n            jobDescription: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmitJob = (e) => {\r\n        e.preventDefault();\r\n\r\n        let requiredFields = document.getElementById('create-job-required-fields');\r\n\r\n        let { jobTitle, jobSalary, jobLocation, jobDescription } = this.state;\r\n\r\n        if (jobTitle !== '' && jobSalary !== '' && jobLocation && jobDescription !== '') {\r\n\r\n            fire.firestore().collection('jobs').add({\r\n                jobTitle,\r\n                jobSalary,\r\n                jobLocation,\r\n                jobDescription\r\n\r\n            }).then(res => {\r\n                console.log(res);\r\n                showNotification('Job added: ', jobTitle, jobSalary, jobLocation, jobDescription);\r\n\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n\r\n            })\r\n\r\n        } else {\r\n            requiredFields.style.color = 'red';\r\n            requiredFields.textContent = 'All Fields Required';\r\n        }\r\n    }\r\n\r\n    enterPressed = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.handleSubmitJob(e);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n        console.log('Job Umounting');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MDBCol lg=\"6\" id='create-job'>\r\n                <form>\r\n                    <p className=\"h5 text-center mb-4\">Post a new job</p>\r\n                    <div className=\"grey-text\">\r\n                        <MDBInput onChange={this.handleJobTitle} label=\"Type a new job title\" group type=\"text\"\r\n                            id='job-title' validate error=\"wrong\"\r\n                            success=\"right\" />\r\n                        <MDBInput onChange={this.handleJobSalary} label=\"Expected salary\" group type=\"text\"\r\n                            id=\"job-salary\" validate error=\"wrong\" />\r\n                        <MDBInput onChange={this.handleJobLocation} label=\"Location\" group type=\"text\"\r\n                            id=\"job-salary\" validate error=\"wrong\" />\r\n                        <MDBInput onChange={this.handleJobDescription} label=\"Job details\" group id='job-description'\r\n                            type=\"textarea\" rows=\"5\" onKeyPress={this.enterPressed} />\r\n                        <p id=\"create-job-required-fields\" />\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <MDBBtn onClick={this.handleSubmitJob}>Post</MDBBtn>\r\n                    </div>\r\n                </form>\r\n            </MDBCol>\r\n        );\r\n    };\r\n}\r\n","import React, {Component} from 'react'\r\nimport {MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBCardTitle, MDBCardText } from 'mdbreact';\r\nimport fire from \"../Firebase/context\";\r\nimport showNotification from \"../notifications\";\r\n\r\nexport default class JobList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = fire.firestore().collection('jobs');\r\n        this.unsubscribe = null;\r\n\r\n        this.state = {\r\n            currentJobList: [],\r\n            user: {}\r\n        }\r\n    }\r\n\r\n    onCollectionUpdate = (querySnapshot) => {\r\n        let currentJobList = [];\r\n        querySnapshot.forEach(doc => {\r\n            const {jobTitle, jobSalary, jobLocation, jobDescription} = doc.data();\r\n            currentJobList.push({\r\n                key: doc.id,\r\n                doc,\r\n                jobTitle,\r\n                jobSalary,\r\n                jobLocation,\r\n                jobDescription\r\n            });\r\n        });\r\n        this.setState({\r\n            currentJobList\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n        this.authListener();\r\n    }\r\n\r\n    componentWillMount() {\r\n         this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n       this.authListener();\r\n    }\r\n\r\n    authListener = () => {\r\n        fire.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.setState({user});\r\n\r\n            } else {\r\n                this.setState({user: null});\r\n            }\r\n        })\r\n    }\r\n\r\n    onDelete = (id) => {\r\n        fire.firestore().collection('jobs').doc(id).delete()\r\n            .then(() => {\r\n                console.log('Document successfully added!');\r\n                showNotification('Successfully deleted', '')\r\n\r\n            }).catch(error => {\r\n            console.log('Error removing ', error.message);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MDBCol>\r\n                {this.state.currentJobList.map(job =>\r\n                    <MDBCard key={job.key} style={{margin: '20px'}} id={job.doc.id}>\r\n                        <MDBCardBody>\r\n                            {this.state.user ? (\r\n                                <div><a href=\"/#\" className=\"close\" data-dismiss=\"alert\" aria-label=\"close\"\r\n                                        style={{color: 'red'}} onClick={() => this.onDelete(job.doc.id)}>&times;</a>\r\n                                </div>) : null}\r\n                            <MDBCardTitle>{job.jobTitle}</MDBCardTitle>\r\n                            <MDBCardText><i className =\"fas fa-pound-sign\"></i> <b>{job.jobSalary}</b> per annum</MDBCardText>\r\n                            <MDBCardText><i className=\"fas fa-map-marker-alt\"></i> <b>{job.jobLocation}</b></MDBCardText>\r\n                            <MDBCardText>{job.jobDescription}</MDBCardText>\r\n                            <MDBBtn color=\"elegant\" onClick={() => console.log('Clicked!')}>Find out more</MDBBtn>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                )}\r\n            </MDBCol>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst NotFoundPage = () => {\r\n\r\n    return (\r\n    <h1 className= 'text-center'>Oooops! Page is not Found 404</h1>\r\n    )\r\n}\r\n\r\nexport default NotFoundPage;","import React, {Component} from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Home from \"./Home/Home\";\r\nimport CreateJob from \"./CreateJob/CreateJob\";\r\nimport JobList from \"./JobList/JobList\";\r\nimport NotFoundPage from \"./NotFoundPage/NotFoundPage\";\r\n\r\nexport default class Routes extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path='/' component={Home}/>\r\n                    <Route path='/jobs/' component={JobList}/>\r\n                   {/* <Route path=\"/jobs/:id\" component={JobListId}/> */}\r\n                    <Route path='/create-a-job/' component={CreateJob}/>\r\n                    \r\n                    <Route component={NotFoundPage}/>\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component} from \"react\";\r\nimport fire from \"../Firebase/context\";\r\nimport {MDBContainer, MDBRow, MDBBtn} from 'mdbreact';\r\nimport showNotification from \"../notifications\";\r\n\r\nexport default class SignOut extends Component {\r\n\r\n    logout = ()=> {\r\n\r\n        fire.auth().signOut()\r\n            .then(() => {\r\n                showNotification('Successful logout', '')\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <MDBContainer id= 'modal-singOut'>\r\n                <MDBRow>\r\n                    <MDBBtn onClick={this.logout}>Sign out</MDBBtn>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        )\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\nimport {MDBNavbarNav, MDBNavItem, MDBNavLink} from \"mdbreact\";\r\nimport SignOut from \"../SignOut/SignOut\";\r\nimport Navigation from \"./Navigation\";\r\n\r\n\r\nexport default class SignInLinks extends Component {\r\n\r\n    componentDidMount() {\r\n        new Navigation().authListener();  // Call the function from another class\r\n    }\r\n    render() {\r\n        return (\r\n                <>\r\n                <MDBNavbarNav className='ml-auto'>\r\n                    <MDBNavItem>\r\n                        <MDBNavLink to=\"/jobs\">Job list</MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                        <MDBNavLink to=\"/create-a-job\">Create a job</MDBNavLink>\r\n                    </MDBNavItem>\r\n                </MDBNavbarNav>\r\n                <MDBNavbarNav right>\r\n                    <MDBNavItem className='user-info' style={{color: 'white', lineHeight: '3.5'}}/>\r\n                    <MDBNavItem>\r\n                        <SignOut/>\r\n                    </MDBNavItem>\r\n                </MDBNavbarNav>\r\n                    </>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBModal, MDBModalHeader} from 'mdbreact';\r\nimport fire from \"../Firebase/context\";\r\n\r\nimport './style/LoginModal.css';\r\n\r\nimport showNotification from \"../notifications\";\r\n\r\n    export default class LoginModal extends Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                modal: false,\r\n                userEmail: '',\r\n                userPassword: '',\r\n\r\n            }\r\n        }\r\n\r\n        // Toggle modal button\r\n        toggle = () => {\r\n            this.setState({\r\n                modal: !this.state.modal\r\n            });\r\n        }\r\n\r\n        handleUserEmail = (e) => {\r\n\r\n            this.setState({\r\n                userEmail: e.target.value\r\n            })\r\n        }\r\n\r\n        handleUserPassword = (e) => {\r\n            this.setState({\r\n                userPassword: e.target.value\r\n            })\r\n        }\r\n\r\n\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            // Checks for empty values\r\n            const {userEmail, userPassword} = this.state;\r\n\r\n            if (userEmail === '' || userPassword === '') {\r\n                let errorLogin = document.getElementById('error-login');\r\n                errorLogin.style.color = 'red';\r\n                errorLogin.style.textAlign = 'center';\r\n                errorLogin.textContent = 'All values are required';\r\n                return;\r\n            }\r\n\r\n            let wrongPassword = document.getElementById('wrong-login-password');\r\n\r\n           fire.auth().signInWithEmailAndPassword(userEmail, userPassword)\r\n                .then((response) => {\r\n                    console.log(response);\r\n\r\n                    showNotification('Successful login, ', userEmail)\r\n\r\n                })\r\n                .catch(error => {\r\n                    wrongPassword.style.color = 'red';\r\n                    wrongPassword.textContent = error.message;\r\n                })\r\n        }\r\n\r\n        enterPressed = (e) => {\r\n            if (e.key === 'Enter') {\r\n                this.handleSubmit(e);\r\n            }\r\n        }\r\n\r\n        render() {\r\n\r\n            return (\r\n                <MDBContainer id='modal-login'>\r\n                    <MDBRow>\r\n                        <MDBBtn onClick={this.toggle}>Sign in</MDBBtn>\r\n                        <MDBModal isOpen={this.state.modal} toggle={this.toggle}><br/>\r\n                            <MDBModalHeader toggle={this.toggle}>Sign in</MDBModalHeader>\r\n                            <MDBCol>\r\n                                <form>\r\n                                    <div className='text-left'>\r\n                                        <MDBInput onChange={this.handleUserEmail} label=\"Type your email\"\r\n                                                  id='signInUser'\r\n                                                  icon=\"envelope\" group type=\"email\"\r\n                                                  validate error=\"wrong\"\r\n                                                  success=\"right\"/>\r\n                                        <MDBInput onChange={this.handleUserPassword} label=\"Type your password\"\r\n                                                  id='signInPassword' icon=\"lock\" group\r\n                                                  type=\"password\" onKeyPress={this.enterPressed} validate/>\r\n                                        <p id='error-login'/>\r\n                                        <p id='wrong-login-password'/>\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                        <MDBBtn onClick={this.handleSubmit}>Login</MDBBtn>\r\n                                    </div>\r\n                                </form>\r\n                            </MDBCol>\r\n                        </MDBModal>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            );\r\n        }\r\n    }\r\n\r\n","import React, {Component} from \"react\";\r\nimport {MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBModal, MDBModalHeader} from 'mdbreact';\r\nimport fire from \"../Firebase/context\";\r\nimport './style/RegisterModal.css';\r\n\r\nimport showNotification from \"../notifications\";\r\n\r\nexport default class RegisterModal extends Component {\r\n    state = {\r\n        modal: false,\r\n        registerUserEmail: '',\r\n        registerPassword: '',\r\n        confirmPassword: ''\r\n    }\r\n\r\n    // Toggle modal button\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    handleRegisterUserEmail = (e) => {\r\n\r\n        this.setState({\r\n            registerUserEmail: e.target.value\r\n        })\r\n    }\r\n\r\n    handleRegisterUserPassword = (e) => {\r\n        this.setState({\r\n            registerPassword: e.target.value\r\n        })\r\n    }\r\n\r\n    handleConfirmRegisterPassword = (e) => {\r\n        this.setState({\r\n            confirmPassword: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmitRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Checks for empty values\r\n        let {registerUserEmail, registerPassword, confirmPassword} = this.state;\r\n\r\n        if (registerUserEmail === '' || registerPassword === '' || confirmPassword === '') {\r\n            let errorRegister = document.getElementById('error-register');\r\n            errorRegister.style.color = 'red';\r\n            errorRegister.style.textAlign = 'center';\r\n            errorRegister.textContent = 'All values are required';\r\n            return;\r\n        }\r\n\r\n        // If passwords don't match\r\n        if (registerPassword !== confirmPassword) {\r\n            let wrongPasswords = document.getElementById('wrong-passwords');\r\n            wrongPasswords.style.color = 'red';\r\n            wrongPasswords.style.textAlign = 'center';\r\n            wrongPasswords.textContent = 'Passwords not match';\r\n            return;\r\n        }\r\n\r\n        fire.auth().createUserWithEmailAndPassword(registerUserEmail, registerPassword)\r\n            .then(response => {\r\n                console.log(response);\r\n\r\n                showNotification('Successful sign up, ', registerUserEmail);\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                let passwordLength = document.getElementById('passwords-length');\r\n                passwordLength.style.color = 'red';\r\n                passwordLength.style.textAlign = 'center';\r\n                passwordLength.textContent = error;\r\n            });\r\n    }\r\n\r\n    enterPressed = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.handleSubmitRegister(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MDBContainer id='modal-register'>\r\n                <MDBRow>\r\n                    <MDBBtn onClick={this.toggle}>Register</MDBBtn>\r\n                    <MDBModal isOpen={this.state.modal} toggle={this.toggle}><br/>\r\n                        <MDBModalHeader toggle={this.toggle}>Register</MDBModalHeader>\r\n                        <MDBCol>\r\n                            <form>\r\n                                <div className='text-left'>\r\n                                    <MDBInput onChange={this.handleRegisterUserEmail} label=\"Type your email\"\r\n                                              id='registerUser' icon=\"envelope\" group type=\"email\"\r\n                                              validate error=\"wrong\"\r\n                                              success=\"right\" required/>\r\n                                    <MDBInput onChange={this.handleRegisterUserPassword} label=\"Type your password\"\r\n                                              id='registerPassword' icon=\"lock\" group\r\n                                              type=\"password\" validate required/>\r\n                                    <MDBInput onChange={this.handleConfirmRegisterPassword} label=\"Confirm password\"\r\n                                              id='confirmPassword' icon=\"lock\" group\r\n                                              type=\"password\" onKeyPress={this.enterPressed} validate required/>\r\n                                    <p id='error-register'/>\r\n                                    <p id='wrong-passwords'/>\r\n                                    <p id='passwords-length'/>\r\n                                    <p>Password should be at least 6 characters</p>\r\n                                </div>\r\n                                <div className=\"text-center\">\r\n\r\n                                    <MDBBtn onClick={this.handleSubmitRegister}>Register</MDBBtn>\r\n                                </div>\r\n                            </form>\r\n                        </MDBCol>\r\n                    </MDBModal>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        );\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport { MDBNavbarNav, MDBNavItem, MDBNavLink} from \"mdbreact\";\r\nimport LoginModal from \"../Login/LoginModal\";\r\nimport RegisterModal from \"../Register/RegisterModal\";\r\n\r\n\r\nconst SignOutLinks = () => {\r\n\r\n        return (\r\n            <>\r\n                <MDBNavbarNav className='ml-auto'>\r\n                    <MDBNavItem>\r\n                        <MDBNavLink to=\"/\">Home</MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                        <MDBNavLink to=\"/jobs\">Job list</MDBNavLink>\r\n                    </MDBNavItem>\r\n                </MDBNavbarNav>\r\n                <MDBNavbarNav right>\r\n                    <LoginModal/>\r\n                    <RegisterModal/>\r\n                </MDBNavbarNav>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default SignOutLinks;","import React, {Component} from \"react\";\r\nimport {MDBNavbar, MDBNavbarBrand, MDBNavLink, MDBNavbarToggler, MDBCollapse} from \"mdbreact\";\r\nimport SignInLinks from \"./SignInLinks\";\r\nimport SignOutLinks from \"./SignOutLinks\";\r\nimport fire from \"../Firebase/context\";\r\nimport './style/navigation.css'\r\n\r\nexport default class Navigation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n           user: {}\r\n        };\r\n     }\r\n\r\n    toggleCollapse = () => {\r\n        this.setState({isOpen: !this.state.isOpen});\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.authListener();\r\n\r\n    }\r\n   authListener = () => {\r\n\r\n        let userDetails = document.querySelector('.user-info');\r\n    \r\n        fire.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.setState({user});\r\n                let userInformation = `Welcome, ${user.email}`;\r\n                userDetails.innerHTML = userInformation;\r\n               \r\n            } else {\r\n                this.setState({user: null});\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n                <MDBNavbar color=\"indigo\" dark expand=\"md\" className='bg-transparent'>\r\n                    <MDBNavbarBrand><MDBNavLink to=\"/\">\r\n                        <strong className=\"white-text text-center\">Amber<br/> Recruitment</strong>\r\n                    </MDBNavLink>\r\n                    </MDBNavbarBrand>\r\n                    <MDBNavbarToggler onClick={this.toggleCollapse}/>\r\n                    <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n                        {this.state.user ? (<SignInLinks/>) : (<SignOutLinks/>)}\r\n                    </MDBCollapse>\r\n                </MDBNavbar>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Routes from \"./AmberRecruitment/Routes\";\r\nimport './App.css';\r\n//import 'bootstrap/dist/css/bootstrap.min.css'\r\n//import 'mdbreact/dist/css/mdb.css';\r\nimport Navigation from './AmberRecruitment/Navigation/Navigation';\r\n\r\n\r\nconst App = () => {\r\n        return (\r\n\r\n            <div className=\"App\">\r\n                <Navigation />\r\n                <Routes/>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename = '/amber-recruitment'><App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}