{"version":3,"sources":["AmberRecruitment/Home/Header/Header.js","AmberRecruitment/Home/Home.js","AmberRecruitment/Firebase/context.js","AmberRecruitment/notifications.js","AmberRecruitment/CreateJob/CreateTask.js","AmberRecruitment/EditTask/EditTask.js","AmberRecruitment/TaskList/TaskList.js","AmberRecruitment/NotFoundPage/NotFoundPage.js","AmberRecruitment/Routes.js","AmberRecruitment/SignOut/SignOut.js","AmberRecruitment/Navigation/SignInLinks.js","AmberRecruitment/Login/LoginModal.js","AmberRecruitment/Register/RegisterModal.js","AmberRecruitment/Navigation/SignOutLinks.js","AmberRecruitment/Navigation/Navigation.js","App.js","index.js"],"names":["Header","className","Home","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","showNotification","text","userEmail","document","getElementById","innerHTML","closeAlertLogin","querySelector","setTimeout","style","display","addEventListener","CreateTask","handleTaskTitle","e","setState","taskTitle","target","value","handleTaskSubTitle","taskSubTitle","handleTaskEstimate","taskEstimate","handleTaskDescription","taskDescription","handleSubmitJob","preventDefault","requiredFields","state","firestore","collection","add","then","res","catch","err","console","log","message","color","textContent","onResetFunc","enterPressed","key","lg","id","onSubmit","this","onChange","label","group","type","validate","error","success","rows","onKeyPress","Component","EditTask","props","test","pushedData","margin","marginTop","to","TaskList","onCollectionUpdate","querySnapshot","currentJobList","forEach","doc","data","push","checked","authListener","auth","onAuthStateChanged","user","onDelete","delete","findOutMore","clickedTask","clickedJob","toggle","showEditModal","handleChange","ref","unsubscribe","onSnapshot","md","sm","map","job","onClick","isOpen","NotFoundPage","Routes","exact","path","component","SignOut","logout","signOut","SignInLinks","Navigation","right","lineHeight","LoginModal","modal","handleUserEmail","handleUserPassword","userPassword","handleSubmit","errorLogin","textAlign","wrongPassword","signInWithEmailAndPassword","response","icon","functions","RegisterModal","registerUserEmail","registerPassword","confirmPassword","handleRegisterUserEmail","handleRegisterUserPassword","handleConfirmRegisterPassword","handleSubmitRegister","errorRegister","wrongPasswords","createUserWithEmailAndPassword","passwordLength","onMakeAdmin","httpsCallable","addAdminRole","email","result","required","SignOutLinks","toggleCollapse","userDetails","userInformation","dark","expand","navbar","App","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.fcf40e86.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h1 className=\"text-center\">Home section</h1>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header/Header\";\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <Header/>\r\n    )\r\n}\r\n\r\nexport default Home;","import firebase from \"firebase\";\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBQC4y3n_ooduNrzEZepf5-mAG61GMhT6o\",\r\n    authDomain: \"amber-recruitment.firebaseapp.com\",\r\n    databaseURL: \"https://amber-recruitment.firebaseio.com\",\r\n    projectId: \"amber-recruitment\",\r\n    storageBucket: \"amber-recruitment.appspot.com\",\r\n    messagingSenderId: \"1095496441215\",\r\n    appId: \"1:1095496441215:web:87b231efee596734474e4a\"\r\n};\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(config);\r\n\r\n//const auth = fire.auth();\r\n\r\n//const firebase = firebase.auth();\r\n//const db = firebase.firestore();\r\n\r\nexport default fire;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","function showNotification(text, userEmail) {\r\n\r\n    let successLogin = document.getElementById('success-login');\r\n\r\n    successLogin.innerHTML = `<div class=\"alert alert-success alert-dismissible\" style=\"position: absolute; top: 100px; right: 20px;\">\r\n                  <a href=\"#\" class=\"close\" data-dismiss=\"alert\"  aria-label=\"close\">&times;</a>\r\n                 ${text} ${userEmail}</div>`;\r\n\r\n    let closeAlertLogin = document.querySelector('.alert');\r\n\r\n    // close alert in 3 seconds\r\n    setTimeout(() => {\r\n        closeAlertLogin.style.display = 'none';\r\n    }, 2000)\r\n\r\n    // close alert manually pressing x\r\n    closeAlertLogin.addEventListener('click', () => {\r\n        closeAlertLogin.style.display = 'none';\r\n    })\r\n}\r\n\r\nexport default showNotification;\r\n","import React, { Component } from \"react\";\r\nimport { MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport './style/CreateTask.css';\r\nimport fire from \"../Firebase/context\";\r\nimport showNotification from \"../notifications\";\r\n\r\n  \r\n\r\nexport default class CreateTask extends Component {\r\n\r\nconstructor() {\r\n \r\nsuper()\r\n    this.state = {\r\n        taskTitle: '',\r\n        taskSubTitle: '',\r\n        taskEstimate: '',\r\n        taskDescription: ''\r\n    }\r\n\r\n}\r\n  \r\n    handleTaskTitle = (e) => {\r\n\r\n        this.setState({\r\n            taskTitle: e.target.value\r\n        })\r\n    }\r\n\r\n    handleTaskSubTitle = (e) => {\r\n\r\n        this.setState({\r\n            taskSubTitle: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleTaskEstimate = (e) => {\r\n\r\n        this.setState({\r\n            taskEstimate: e.target.value\r\n        })\r\n    }\r\n\r\n    handleTaskDescription = (e) => {\r\n\r\n        this.setState({\r\n            taskDescription: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmitJob = (e) => {\r\n        e.preventDefault();\r\n\r\n        let requiredFields = document.getElementById('create-task-required-fields');\r\n\r\n        let { taskTitle, taskSubTitle, taskEstimate, taskDescription } = this.state;\r\n\r\n        if (taskTitle !== '' && taskSubTitle !== '' && taskEstimate && taskDescription !== '') {\r\n\r\n            fire.firestore().collection('jobs').add({\r\n                taskTitle,\r\n                taskSubTitle,\r\n                taskEstimate,\r\n                taskDescription\r\n\r\n            }).then(res => {\r\n                //console.log(res);\r\n                showNotification('Task added: ', taskTitle, taskSubTitle, taskEstimate, taskDescription);\r\n\r\n\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n\r\n            })\r\n\r\n        } else {\r\n            requiredFields.style.color = 'red';\r\n            requiredFields.textContent = 'All Fields Required';\r\n        }\r\n\r\n        this.setState({taskTitle: ''})\r\n    }\r\n\r\n    onResetFunc = () => {\r\n\r\n        this.setState({\r\n            taskTitle: '',\r\n            taskSubTitle: '',\r\n            taskEstimate: '',\r\n            taskDescription: ''\r\n        })\r\n    }\r\n\r\n    enterPressed = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.handleSubmitJob(e);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n\r\n        console.log('Job Umounting');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n         <MDBCol lg=\"6\" id='create-job'>\r\n                <form onSubmit={this.handleSubmitJob}>\r\n                    <p className=\"h5 text-center mb-4\">Create a task</p>\r\n                    <div className=\"grey-text\">\r\n                        <MDBInput onChange={this.handleTaskTitle} label=\"Type a task title\" group type=\"text\"\r\n                            id='task-title' validate error=\"wrong\"\r\n                            success=\"right\"/>\r\n                        <MDBInput onChange={this.handleTaskSubTitle} label=\"Type a task subtitle\" group type=\"text\"\r\n                            id=\"task-subtitle\" validate error=\"wrong\" />\r\n                        <MDBInput onChange={this.handleTaskEstimate} label=\"Estimate\" group type=\"text\"\r\n                            id=\"task-estimate\" validate error=\"wrong\" />\r\n                        <MDBInput onChange={this.handleTaskDescription} label=\"Task details\" group id='task-description'\r\n                            type=\"textarea\" rows=\"5\" onKeyPress={this.enterPressed} />\r\n                        <p id=\"create-task-required-fields\" />\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <MDBBtn type=\"submit\">Create</MDBBtn>\r\n                        \r\n                    </div>\r\n                </form>\r\n        </MDBCol> \r\n        );\r\n    };\r\n}\r\n","import React from 'react';\r\nimport TaskList from '../TaskList/TaskList';\r\nimport { MDBCol, MDBBtn, MDBInput, MDBNavLink } from 'mdbreact';\r\n\r\nexport default function EditTask(props) {\r\n\r\n    let test = props.pushedData;\r\n    \r\n    console.log(test);\r\n\r\n\r\n    return (\r\n        <MDBCol lg=\"6\" id='edit-job' style={{margin: 'auto', marginTop: '40px'}}>\r\n        <form>\r\n            <p className=\"h5 text-center mb-4\">Edit task</p>\r\n            <div className=\"grey-text\">\r\n                <MDBInput  label=\"Type a task title\" group type=\"text\"\r\n                    id='task-title-edit' validate error=\"wrong\"\r\n                    success=\"right\" />\r\n                <MDBInput label=\"Type a task subtitle\" group type=\"text\"\r\n                    id=\"task-subtitle-edit\" validate error=\"wrong\" />\r\n                <MDBInput label=\"Estimate\" group type=\"text\"\r\n                    id=\"task-estimate-task\" validate error=\"wrong\" />\r\n                <MDBInput label=\"Task details\" group id='task-description-edit'\r\n                    type=\"textarea\" rows=\"5\" />\r\n                <p id=\"create-task-required-fields\" />\r\n            </div>\r\n            <div className=\"text-center\">\r\n            <MDBNavLink to='tasks'>\r\n            <MDBBtn>Cancel</MDBBtn>\r\n            </MDBNavLink>\r\n            <MDBBtn>Edit</MDBBtn>\r\n                \r\n            </div>\r\n        </form>\r\n</MDBCol> \r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport { MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBRow, MDBNavLink, MDBInput, MDBContainer, MDBModal, MDBModalHeader, MDBModalBody, MDBModalFooter } from \"mdbreact\";\r\nimport EditTask from \"../EditTask/EditTask\";\r\nimport fire from \"../Firebase/context\";\r\nimport showNotification from \"../notifications\";\r\n\r\nexport default class TaskList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = fire.firestore().collection(\"jobs\");\r\n        this.unsubscribe = null;\r\n\r\n        this.state = {\r\n            currentJobList: [],\r\n            user: {},\r\n            clickedJob: '',\r\n            pushedData: [],\r\n            showEditModal: false\r\n        };\r\n    }\r\n\r\n    onCollectionUpdate = (querySnapshot) => {\r\n        let currentJobList = [];\r\n        querySnapshot.forEach((doc) => {\r\n            const { taskTitle, taskSubTitle, taskEstimate, taskDescription } =\r\n                doc.data();\r\n\r\n            currentJobList.push({\r\n                key: doc.id,\r\n                doc,\r\n                taskTitle,\r\n                taskSubTitle,\r\n                taskEstimate,\r\n                taskDescription,\r\n                checked: true,\r\n            });\r\n        });\r\n        this.setState({\r\n            currentJobList,\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n        this.authListener();\r\n    }\r\n\r\n    componentWillMount() {\r\n        // this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n        this.authListener();\r\n    }\r\n\r\n    authListener = () => {\r\n        fire.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                this.setState({ user });\r\n\r\n                // user.getIdTokenResult().then(idTokenResult => {\r\n                //     console.log(idTokenResult.claims.admin);\r\n                // })\r\n            } else {\r\n                this.setState({ user: null });\r\n            }\r\n        });\r\n    };\r\n\r\n    onDelete = (id) => {\r\n        fire\r\n            .firestore()\r\n            .collection(\"jobs\")\r\n            .doc(id)\r\n            .delete()\r\n            .then(() => {\r\n                console.log(\"Document successfully added!\");\r\n                showNotification(\"Successfully deleted\", \"\");\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error removing \", error.message);\r\n            });\r\n    };\r\n\r\n    findOutMore = (clickedTask) => {\r\n\r\n        let clickedJob = this.state.clickedJob;\r\n        clickedJob = clickedTask\r\n        this.setState({ clickedJob: clickedJob });\r\n        console.log(clickedJob);\r\n\r\n        let pushedData = this.state.pushedData;\r\n        pushedData.push(clickedTask)\r\n        console.log(pushedData);\r\n\r\n\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({ showEditModal: !this.state.showEditModal })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        console.log(e.target.value);\r\n\r\n        this.setState({ checked: !this.state.checked });\r\n        console.log(!this.state.checked);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <MDBRow className=\"d-flex justify-content-center\">\r\n                <MDBCol lg=\"6\" md=\"8\" sm=\"10\">\r\n                    {this.state.currentJobList.map((job) => (\r\n                        <MDBCard key={job.key} style={{ margin: \"20px\" }} id={job.doc.id}>\r\n                            <MDBCardBody>\r\n                                <MDBCardTitle>\r\n                                    <i className=\"fas fa-tasks\"></i> {job.taskTitle}\r\n                                </MDBCardTitle>\r\n                                <MDBCardText>\r\n                                    <i className=\"fas fa-book-reader\"></i>{\" \"}\r\n                                    <b>{job.taskSubTitle}</b>\r\n                                </MDBCardText>\r\n                                <MDBCardText>\r\n                                    <i className=\"fas fa-hourglass\"></i> <b>{job.taskEstimate}</b>\r\n                                </MDBCardText>\r\n                                <MDBCardText>\r\n                                    <i className=\"fas fa-info-circle\"></i> {job.taskDescription}\r\n                                </MDBCardText>\r\n\r\n                                {this.state.user ? (\r\n                                    <div>\r\n                                        <MDBContainer id='modal-edit'>\r\n                                            <MDBRow>\r\n                                                <MDBBtn color=\"info\" onClick={() => this.findOutMore(job)} onClick={this.toggle}>Edit</MDBBtn>\r\n                                                <MDBBtn color=\"green\" onClick={() => this.onDelete(job.doc.id)}>Complete</MDBBtn>\r\n                                                <MDBModal isOpen={this.state.showEditModal} toggle={this.toggle}><br />\r\n                                                \r\n                                                    <MDBModalHeader toggle={this.toggle}>Edit task</MDBModalHeader>\r\n                                                    <MDBCol lg=\"12\" id='edit-task'>\r\n                                                        <form>\r\n                                                          \r\n                                                            <div className=\"grey-text\">\r\n                                                                <MDBInput  label=\"Type a task title\" group type=\"text\" value={job.taskTitle}\r\n                                                                    id='task-title' validate error=\"wrong\"\r\n                                                                    success=\"right\" />\r\n                                                                <MDBInput  label=\"Type a task subtitle\" group type=\"text\" value={job.taskSubTitle}\r\n                                                                    id=\"task-subtitle\" validate error=\"wrong\" />\r\n                                                                <MDBInput  label=\"Estimate\" group type=\"text\" value={job.taskEstimate}\r\n                                                                    id=\"task-estimate\" validate error=\"wrong\" />\r\n                                                                <MDBInput  label=\"Task details\" group id='task-description' value={job.taskDescription}\r\n                                                                    type=\"textarea\" rows=\"5\" />\r\n                                                                <p id=\"create-task-required-fields\" />\r\n                                                            </div>\r\n                                                            <div className=\"text-center\">\r\n                                                                <MDBBtn>Edit</MDBBtn>\r\n\r\n                                                            </div>\r\n                                                        </form>\r\n                                                    </MDBCol>\r\n                                                </MDBModal>\r\n\r\n\r\n                                            </MDBRow>\r\n                                        </MDBContainer>\r\n                                        \r\n                                    </div>\r\n                                ) : null}\r\n\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    ))\r\n                    }\r\n                </MDBCol>\r\n            </MDBRow >\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nconst NotFoundPage = () => {\r\n\r\n    return (\r\n    <h1 className= 'text-center'>Oooops! Page is not Found 404</h1>\r\n    )\r\n}\r\n\r\nexport default NotFoundPage;","import React, {Component} from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Home from \"./Home/Home\";\r\nimport CreateTask from \"./CreateJob/CreateTask\";\r\nimport TaskList from './TaskList/TaskList';\r\nimport NotFoundPage from \"./NotFoundPage/NotFoundPage\";\r\nimport EditTask from './EditTask/EditTask';\r\n\r\nexport default class Routes extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path='/' component={Home}/>\r\n                    <Route path='/tasks/' component={TaskList}/>\r\n                    <Route path='/edit/' component={EditTask}/>\r\n                    <Route path='/create-a-task/' component={CreateTask}/>\r\n                    <Route component={NotFoundPage}/>\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component} from \"react\";\r\nimport fire from \"../Firebase/context\";\r\nimport {MDBContainer, MDBRow, MDBBtn} from 'mdbreact';\r\nimport showNotification from \"../notifications\";\r\n\r\nexport default class SignOut extends Component {\r\n\r\n    logout = ()=> {\r\n\r\n        fire.auth().signOut()\r\n            .then(() => {\r\n                showNotification('Successful logout', '')\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <MDBContainer id= 'modal-singOut'>\r\n                <MDBRow>\r\n                    <MDBBtn onClick={this.logout}>Sign out</MDBBtn>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        )\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\nimport {MDBNavbarNav, MDBNavItem, MDBNavLink} from \"mdbreact\";\r\nimport SignOut from \"../SignOut/SignOut\";\r\nimport Navigation from \"./Navigation\";\r\n\r\n\r\nexport default class SignInLinks extends Component {\r\n\r\n    componentDidMount() {\r\n        new Navigation().authListener();  // Call the function from another class\r\n    }\r\n    render() {\r\n        return (\r\n                <>\r\n                <MDBNavbarNav className='ml-auto'>\r\n                    <MDBNavItem>\r\n                        <MDBNavLink to=\"/tasks\">Task list</MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                        <MDBNavLink to=\"/create-a-task\">Create a task</MDBNavLink>\r\n                    </MDBNavItem>\r\n                </MDBNavbarNav>\r\n                <MDBNavbarNav right>\r\n                    <MDBNavItem className='user-info' style={{color: 'white', lineHeight: '3.5'}}/>\r\n                    <MDBNavItem>\r\n                        <SignOut/>\r\n                    </MDBNavItem>\r\n                </MDBNavbarNav>\r\n                    </>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBModal, MDBModalHeader} from 'mdbreact';\r\nimport fire from \"../Firebase/context\";\r\n\r\nimport './style/LoginModal.css';\r\n\r\nimport showNotification from \"../notifications\";\r\n\r\n    export default class LoginModal extends Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                modal: false,\r\n                userEmail: '',\r\n                userPassword: '',\r\n\r\n            }\r\n        }\r\n\r\n        // Toggle modal button\r\n        toggle = () => {\r\n            this.setState({\r\n                modal: !this.state.modal\r\n            });\r\n        }\r\n\r\n        handleUserEmail = (e) => {\r\n\r\n            this.setState({\r\n                userEmail: e.target.value\r\n            })\r\n        }\r\n\r\n        handleUserPassword = (e) => {\r\n            this.setState({\r\n                userPassword: e.target.value\r\n            })\r\n        }\r\n\r\n\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            // Checks for empty values\r\n            const {userEmail, userPassword} = this.state;\r\n\r\n            if (userEmail === '' || userPassword === '') {\r\n                let errorLogin = document.getElementById('error-login');\r\n                errorLogin.style.color = 'red';\r\n                errorLogin.style.textAlign = 'center';\r\n                errorLogin.textContent = 'All values are required';\r\n                return;\r\n            }\r\n\r\n            let wrongPassword = document.getElementById('wrong-login-password');\r\n\r\n           fire.auth().signInWithEmailAndPassword(userEmail, userPassword)\r\n                .then((response) => {\r\n                    console.log(response);\r\n\r\n                    // get uid of the user\r\n                    //console.log(response.user.uid);\r\n\r\n                    showNotification('Successful login, ', userEmail)\r\n\r\n                })\r\n                .catch(error => {\r\n                    wrongPassword.style.color = 'red';\r\n                    wrongPassword.textContent = error.message;\r\n                })\r\n        }\r\n\r\n        enterPressed = (e) => {\r\n            if (e.key === 'Enter') {\r\n                this.handleSubmit(e);\r\n            }\r\n        }\r\n\r\n        render() {\r\n\r\n            return (\r\n                <MDBContainer id='modal-login'>\r\n                    <MDBRow>\r\n                        <MDBBtn onClick={this.toggle}>Sign in</MDBBtn>\r\n                        <MDBModal isOpen={this.state.modal} toggle={this.toggle}><br/>\r\n                            <MDBModalHeader toggle={this.toggle}>Sign in</MDBModalHeader>\r\n                            <MDBCol>\r\n                                <form>\r\n                                    <div className='text-left'>\r\n                                        <MDBInput onChange={this.handleUserEmail} label=\"Type your email\"\r\n                                                  id='signInUser'\r\n                                                  icon=\"envelope\" group type=\"email\"\r\n                                                  validate error=\"wrong\"\r\n                                                  success=\"right\"/>\r\n                                        <MDBInput onChange={this.handleUserPassword} label=\"Type your password\"\r\n                                                  id='signInPassword' icon=\"lock\" group\r\n                                                  type=\"password\" onKeyPress={this.enterPressed} validate/>\r\n                                        <p id='error-login'/>\r\n                                        <p id='wrong-login-password'/>\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                        <MDBBtn onClick={this.handleSubmit}>Login</MDBBtn>\r\n                                    </div>\r\n                                </form>\r\n                            </MDBCol>\r\n                        </MDBModal>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            );\r\n        }\r\n    }\r\n\r\n","import React, { Component } from \"react\";\r\nimport './style/RegisterModal.css';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBModal, MDBModalHeader } from 'mdbreact';\r\n\r\n\r\n\r\nimport fire from \"../Firebase/context\";\r\nimport firebase from \"firebase\";\r\nimport showNotification from \"../notifications\";\r\n\r\nconst functions = firebase.functions();\r\n\r\nexport default class RegisterModal extends Component {\r\n    state = {\r\n        modal: false,\r\n        registerUserEmail: '',\r\n        registerPassword: '',\r\n        confirmPassword: ''\r\n        \r\n    }\r\n\r\n    // Toggle modal button\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    handleRegisterUserEmail = (e) => {\r\n\r\n        this.setState({\r\n            registerUserEmail: e.target.value\r\n        })\r\n    }\r\n\r\n    handleRegisterUserPassword = (e) => {\r\n        this.setState({\r\n            registerPassword: e.target.value\r\n        })\r\n    }\r\n\r\n    handleConfirmRegisterPassword = (e) => {\r\n        this.setState({\r\n            confirmPassword: e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    handleSubmitRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Checks for empty values\r\n        let { registerUserEmail, registerPassword, confirmPassword } = this.state;\r\n\r\n        if (registerUserEmail === '' || registerPassword === '' || confirmPassword === '') {\r\n            let errorRegister = document.getElementById('error-register');\r\n            errorRegister.style.color = 'red';\r\n            errorRegister.style.textAlign = 'center';\r\n            errorRegister.textContent = 'All values are required';\r\n            return;\r\n        }\r\n\r\n        // If passwords don't match\r\n        if (registerPassword !== confirmPassword) {\r\n            let wrongPasswords = document.getElementById('wrong-passwords');\r\n            wrongPasswords.style.color = 'red';\r\n            wrongPasswords.style.textAlign = 'center';\r\n            wrongPasswords.textContent = 'Passwords not match';\r\n            return;\r\n        }\r\n\r\n\r\n        fire.auth().createUserWithEmailAndPassword(registerUserEmail, registerPassword)\r\n            .then(response => {\r\n                console.log(response);\r\n\r\n                showNotification('Successful sign up, ', registerUserEmail);\r\n\r\n            })\r\n\r\n            .catch(error => {\r\n                console.log(error)\r\n                let passwordLength = document.getElementById('passwords-length');\r\n                passwordLength.style.color = 'red';\r\n                passwordLength.style.textAlign = 'center';\r\n                passwordLength.textContent = error;\r\n            });\r\n\r\n\r\n    }\r\n\r\n    enterPressed = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.handleSubmitRegister(e);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onMakeAdmin = () => {\r\n\r\n\r\n        let { registerUserEmail } = this.state;\r\n\r\n        const addAdminRole = functions.httpsCallable('addAdminRole');\r\n        addAdminRole({ email: registerUserEmail }).then(result => {\r\n            console.log(result);\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <MDBContainer id='modal-register'>\r\n                <MDBRow>\r\n                    <MDBBtn onClick={this.toggle}>Register</MDBBtn>\r\n                    <MDBModal isOpen={this.state.modal} toggle={this.toggle}><br />\r\n                        <MDBModalHeader toggle={this.toggle}>Register</MDBModalHeader>\r\n                        <MDBCol>\r\n                            <form>\r\n                                <div className='text-left'>\r\n                                    <MDBInput onChange={this.handleRegisterUserEmail} label=\"Type your email\"\r\n                                        id='registerUser' icon=\"envelope\" group type=\"email\"\r\n                                        validate error=\"wrong\"\r\n                                        success=\"right\" required />\r\n                                    <MDBInput onChange={this.handleRegisterUserPassword} label=\"Type your password\"\r\n                                        id='registerPassword' icon=\"lock\" group\r\n                                        type=\"password\" validate required />\r\n                                    <MDBInput onChange={this.handleConfirmRegisterPassword} label=\"Confirm password\"\r\n                                        id='confirmPassword' icon=\"lock\" group\r\n                                        type=\"password\" onKeyPress={this.enterPressed} validate required />\r\n                                    <p id='error-register' />\r\n                                    <p id='wrong-passwords' />\r\n                                    <p id='passwords-length' />\r\n                                    <p>Password should be at least 6 characters</p>\r\n                                </div>\r\n                                <div className=\"text-center\">\r\n                                    <MDBBtn onClick={this.onMakeAdmin}>Make Admin</MDBBtn>\r\n                                    <MDBBtn onClick={this.handleSubmitRegister}>Register</MDBBtn>\r\n\r\n                                </div>\r\n                            </form>\r\n                        </MDBCol>\r\n                    </MDBModal>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        );\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport { MDBNavbarNav, MDBNavItem, MDBNavLink} from \"mdbreact\";\r\nimport LoginModal from \"../Login/LoginModal\";\r\nimport RegisterModal from \"../Register/RegisterModal\";\r\n\r\n\r\nconst SignOutLinks = () => {\r\n\r\n        return (\r\n            <>\r\n                <MDBNavbarNav className='ml-auto'>\r\n                    <MDBNavItem>\r\n                        <MDBNavLink to=\"/\">Home</MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                        <MDBNavLink to=\"/tasks\">Task list</MDBNavLink>\r\n                    </MDBNavItem>\r\n                </MDBNavbarNav>\r\n                <MDBNavbarNav right>\r\n                    <LoginModal/>\r\n                    <RegisterModal/>\r\n                </MDBNavbarNav>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default SignOutLinks;","import React, {Component} from \"react\";\r\nimport {MDBNavbar, MDBNavbarBrand, MDBNavLink, MDBNavbarToggler, MDBCollapse} from \"mdbreact\";\r\nimport SignInLinks from \"./SignInLinks\";\r\nimport SignOutLinks from \"./SignOutLinks\";\r\nimport fire from \"../Firebase/context\";\r\nimport './style/navigation.css'\r\n\r\nexport default class Navigation extends Component {\r\n\r\n   \r\n        state = {\r\n            isOpen: false,\r\n            user: {}\r\n        };\r\n     \r\n\r\n    toggleCollapse = () => {\r\n        this.setState({isOpen: !this.state.isOpen});\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.authListener();\r\n\r\n    }\r\n   authListener = () => {\r\n\r\n        let userDetails = document.querySelector('.user-info');\r\n    \r\n        fire.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.setState({user});\r\n                let userInformation = `Welcome, ${user.email}`;\r\n                userDetails.innerHTML = userInformation;\r\n               \r\n            } else {\r\n                this.setState({user: null});\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n                <MDBNavbar color=\"indigo\" dark expand=\"md\" className='bg-transparent'>\r\n                    <MDBNavbarBrand><MDBNavLink to=\"/\">\r\n                        <strong className=\"white-text text-center\">Amber<br/> Recruitment</strong>\r\n                    </MDBNavLink>\r\n                    </MDBNavbarBrand>\r\n                    <MDBNavbarToggler onClick={this.toggleCollapse}/>\r\n                    <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n                        {this.state.user ? (<SignInLinks/>) : (<SignOutLinks/>)}\r\n                    </MDBCollapse>\r\n                </MDBNavbar>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Routes from \"./AmberRecruitment/Routes\";\r\nimport './App.css';\r\n//import 'bootstrap/dist/css/bootstrap.min.css'\r\n//import 'mdbreact/dist/css/mdb.css';\r\nimport Navigation from './AmberRecruitment/Navigation/Navigation';\r\n\r\n\r\nconst App = () => {\r\n        return (\r\n\r\n            <div className=\"App\">\r\n                <Navigation />\r\n                <Routes/>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename = '/amber-recruitment'><App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}